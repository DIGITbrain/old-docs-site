{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DIGITbrain Project Documentation For full project details visit digitbrain.eu . About this documentation These docs aim to serve as a point of reference for providers of assets to DIGITbrain. The navigation bar along the top will serve as your guide.","title":"Home"},{"location":"#digitbrain-project-documentation","text":"For full project details visit digitbrain.eu .","title":"DIGITbrain Project Documentation"},{"location":"#about-this-documentation","text":"These docs aim to serve as a point of reference for providers of assets to DIGITbrain. The navigation bar along the top will serve as your guide.","title":"About this documentation"},{"location":"algorithm/","text":"Algorithms in DIGITbrain Introduction Here is an introduction to Algorithms in Db. Pre-requisites Information on any requirements imposed on this asset. Metadata describing Algorithms For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired Further reading... This space is for any other required documentation on this asset.","title":"Algorithm"},{"location":"algorithm/#algorithms-in-digitbrain","text":"","title":"Algorithms in DIGITbrain"},{"location":"algorithm/#introduction","text":"Here is an introduction to Algorithms in Db.","title":"Introduction"},{"location":"algorithm/#pre-requisites","text":"Information on any requirements imposed on this asset.","title":"Pre-requisites"},{"location":"algorithm/#metadata-describing-algorithms","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired","title":"Metadata describing Algorithms"},{"location":"algorithm/#further-reading","text":"This space is for any other required documentation on this asset.","title":"Further reading..."},{"location":"data/","text":"Data in DIGITbrain Introduction Here is an introduction to Data in Db. Pre-requisites Information on any requirements imposed on this asset. Metadata describing Data For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired Further reading... This space is for any other required documentation on this asset.","title":"Data"},{"location":"data/#data-in-digitbrain","text":"","title":"Data in DIGITbrain"},{"location":"data/#introduction","text":"Here is an introduction to Data in Db.","title":"Introduction"},{"location":"data/#pre-requisites","text":"Information on any requirements imposed on this asset.","title":"Pre-requisites"},{"location":"data/#metadata-describing-data","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired","title":"Metadata describing Data"},{"location":"data/#further-reading","text":"This space is for any other required documentation on this asset.","title":"Further reading..."},{"location":"deployment/","text":"Deployments in DIGITbrain Introduction A deployment in DIGITbrain specifies the infrastructure that a desired DMA Tuple will be deployed across. Here it is necessary to provide details on the type of infrastructure that this deployment will define, along with all the configuration details required by that infrastructure type. Pre-requisites For most DMA Tuples in DIGITbrain, a common set of Deployments will be suitable. Required IDs that describe that common set are available in the documentation that follows below. For some workloads with very specific hardware or software requirements, or for those who require direct access to underlying virtual machines, it may be necessary to raise a ticket with the administrator of your CloudBroker Platform. Where bring-your-own edges are used, DIGITbrain currently supports the following ARM or x86 Architectures Common Linux Distributions Minimum 1 CPU, 1GB RAM and 5GB free disk space Metadata describing Deployment For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview The Further Reading section below Further reading... This section takes an in-depth look at some of the more complex fields required to describe this asset: type Required \u2013 DIGITbrain supports cloud infrastructure deployed via the CloudBroker platform, or bring-your-own Linux-based Edge devices. This should be specified in this field. The other metadata in this section should be completed according to the type (e.g. CloudBroker-specific metadata is not required if type: edge ) cloudbroker edge type : cloudbroker cloudbroker : deployment_id : instance_type_id : key_pair_id : opened_port : endpoint : type : edge edge : endpoint : cloudbroker.deployment_id Required \u2013 A CloudBroker deployment ties together software, resource and region. Indicative IDs are given below, but any LTS Debian-based Linux distribution should be supported. It is recommended to use the MiCADO-Optimised deployment. MiCADO-Optimised Ubuntu 20.04 Ubuntu 18.04 Custom cloudbroker : deployment_id : 27f3dd48-1dac-4d3c-8b7f-39338ed55543 cloudbroker : deployment_id : 16b1e2d4-3a2c-406e-8c45-5637099021f0 cloudbroker : deployment_id : 5a081b54-8992-4ff7-8a21-74e425062507 <!-- Find your deployment_id at this URL --> https:// < cloudbroker-endpoint > /deployments/ < deployment-id > cloudbroker.instance_type_id Required \u2013 The CloudBroker instance type defines the CPU and RAM that will be available on the infrastructure. Indicative IDs are given below. The minimum requirements are a 2 vCPU/2GB RAM 2 vCPU | 4GB RAM 4 vCPU | 8GB RAM 8 vCPU | 16GB RAM Custom cloudbroker : instance_type_id : ca727925-a5ca-4697-b2c3-8788d82457d5 cloudbroker : instance_type_id : ffb42759-fb52-4401-9c75-889ea0ed9602 cloudbroker : instance_type_id : 664330f3-42b1-4f52-a675-fd182a21ef51 <!-- Find your instance_type_id at this URL --> https:// < cloudbroker-endpoint > /instance_types/ < instance-type-id > cloudbroker.key_pair_id Optional \u2013 The CloudBroker ID for an SSH key pair, for remote access to the infrastructure. A key pair must be created on the platform. Custom <!-- Find your key_pair_id at this URL --> https:// < cloudbroker-endpoint > /key_pairs/ < key-pair-id > cloudbroker.opened_port Optional \u2013 A comma-separated string listing port numbers, which will be opened on the instance (both TCP and UDP protocols will be affected). Custom cloudbroker : opened_port : 80,443,8080,30010 cloudbroker.endpoint Required \u2013 The endpoint of the CloudBroker platform that will handle the deployment of the above infrastructure. DIGITbrain cloudbroker : endpoint : https://cloudsme-cbp.scaletools.com.ua edge.endpoint Required \u2013 The endpoint of the bring-your-own Edge device that provides this Deployment. Your Edge Device edge : endpoint : https://192.168.1.1","title":"Deployment"},{"location":"deployment/#deployments-in-digitbrain","text":"","title":"Deployments in DIGITbrain"},{"location":"deployment/#introduction","text":"A deployment in DIGITbrain specifies the infrastructure that a desired DMA Tuple will be deployed across. Here it is necessary to provide details on the type of infrastructure that this deployment will define, along with all the configuration details required by that infrastructure type.","title":"Introduction"},{"location":"deployment/#pre-requisites","text":"For most DMA Tuples in DIGITbrain, a common set of Deployments will be suitable. Required IDs that describe that common set are available in the documentation that follows below. For some workloads with very specific hardware or software requirements, or for those who require direct access to underlying virtual machines, it may be necessary to raise a ticket with the administrator of your CloudBroker Platform. Where bring-your-own edges are used, DIGITbrain currently supports the following ARM or x86 Architectures Common Linux Distributions Minimum 1 CPU, 1GB RAM and 5GB free disk space","title":"Pre-requisites"},{"location":"deployment/#metadata-describing-deployment","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview The Further Reading section below","title":"Metadata describing Deployment"},{"location":"deployment/#further-reading","text":"This section takes an in-depth look at some of the more complex fields required to describe this asset: type Required \u2013 DIGITbrain supports cloud infrastructure deployed via the CloudBroker platform, or bring-your-own Linux-based Edge devices. This should be specified in this field. The other metadata in this section should be completed according to the type (e.g. CloudBroker-specific metadata is not required if type: edge ) cloudbroker edge type : cloudbroker cloudbroker : deployment_id : instance_type_id : key_pair_id : opened_port : endpoint : type : edge edge : endpoint : cloudbroker.deployment_id Required \u2013 A CloudBroker deployment ties together software, resource and region. Indicative IDs are given below, but any LTS Debian-based Linux distribution should be supported. It is recommended to use the MiCADO-Optimised deployment. MiCADO-Optimised Ubuntu 20.04 Ubuntu 18.04 Custom cloudbroker : deployment_id : 27f3dd48-1dac-4d3c-8b7f-39338ed55543 cloudbroker : deployment_id : 16b1e2d4-3a2c-406e-8c45-5637099021f0 cloudbroker : deployment_id : 5a081b54-8992-4ff7-8a21-74e425062507 <!-- Find your deployment_id at this URL --> https:// < cloudbroker-endpoint > /deployments/ < deployment-id > cloudbroker.instance_type_id Required \u2013 The CloudBroker instance type defines the CPU and RAM that will be available on the infrastructure. Indicative IDs are given below. The minimum requirements are a 2 vCPU/2GB RAM 2 vCPU | 4GB RAM 4 vCPU | 8GB RAM 8 vCPU | 16GB RAM Custom cloudbroker : instance_type_id : ca727925-a5ca-4697-b2c3-8788d82457d5 cloudbroker : instance_type_id : ffb42759-fb52-4401-9c75-889ea0ed9602 cloudbroker : instance_type_id : 664330f3-42b1-4f52-a675-fd182a21ef51 <!-- Find your instance_type_id at this URL --> https:// < cloudbroker-endpoint > /instance_types/ < instance-type-id > cloudbroker.key_pair_id Optional \u2013 The CloudBroker ID for an SSH key pair, for remote access to the infrastructure. A key pair must be created on the platform. Custom <!-- Find your key_pair_id at this URL --> https:// < cloudbroker-endpoint > /key_pairs/ < key-pair-id > cloudbroker.opened_port Optional \u2013 A comma-separated string listing port numbers, which will be opened on the instance (both TCP and UDP protocols will be affected). Custom cloudbroker : opened_port : 80,443,8080,30010 cloudbroker.endpoint Required \u2013 The endpoint of the CloudBroker platform that will handle the deployment of the above infrastructure. DIGITbrain cloudbroker : endpoint : https://cloudsme-cbp.scaletools.com.ua edge.endpoint Required \u2013 The endpoint of the bring-your-own Edge device that provides this Deployment. Your Edge Device edge : endpoint : https://192.168.1.1","title":"Further reading..."},{"location":"dma_tuple/","text":"Data-Model-Algorithm Tuples in DIGITbrain Introduction Here is an introduction to DMA Tuples in Db. Pre-requisites Information on any requirements imposed on this asset. Metadata describing DMA Tuples For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired Further reading... This space is for any other required documentation on this asset.","title":"DMA Tuple"},{"location":"dma_tuple/#data-model-algorithm-tuples-in-digitbrain","text":"","title":"Data-Model-Algorithm Tuples in DIGITbrain"},{"location":"dma_tuple/#introduction","text":"Here is an introduction to DMA Tuples in Db.","title":"Introduction"},{"location":"dma_tuple/#pre-requisites","text":"Information on any requirements imposed on this asset.","title":"Pre-requisites"},{"location":"dma_tuple/#metadata-describing-dma-tuples","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired","title":"Metadata describing DMA Tuples"},{"location":"dma_tuple/#further-reading","text":"This space is for any other required documentation on this asset.","title":"Further reading..."},{"location":"ma_pair/","text":"Model-Algorithm Pairs in DIGITbrain Introduction Here is an introduction to MA Pairs in Db. Pre-requisites Information on any requirements imposed on this asset. Metadata describing MA Pairs For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired Further reading... This space is for any other required documentation on this asset.","title":"MA Pair"},{"location":"ma_pair/#model-algorithm-pairs-in-digitbrain","text":"","title":"Model-Algorithm Pairs in DIGITbrain"},{"location":"ma_pair/#introduction","text":"Here is an introduction to MA Pairs in Db.","title":"Introduction"},{"location":"ma_pair/#pre-requisites","text":"Information on any requirements imposed on this asset.","title":"Pre-requisites"},{"location":"ma_pair/#metadata-describing-ma-pairs","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired","title":"Metadata describing MA Pairs"},{"location":"ma_pair/#further-reading","text":"This space is for any other required documentation on this asset.","title":"Further reading..."},{"location":"microservice/","text":"Microservices in DIGITbrain Introduction Microservices are the smallest building-block in DIGITbrain. They are containerised applications that provide some required functionality. Microservices can be composed together to create an Algorithm, which uses the functionality of potentially multiple Microservices to realise some goal. Pre-requisites Microservices in DIGITbrain must be containerised in an OCI-compliant image format. The most common format for this is Docker but other formats are also suitable. Once built, your container must be pushed to a Container Registry. DockerHub offers free public and paid private repositories, or the DIGITbrain platform itself offers private repositories on a private registry. Contact an administrator for access to the DIGITbrain private registry. Metadata describing Microservices For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired Further reading... This space is for any other required documentation on this asset.","title":"Microservice"},{"location":"microservice/#microservices-in-digitbrain","text":"","title":"Microservices in DIGITbrain"},{"location":"microservice/#introduction","text":"Microservices are the smallest building-block in DIGITbrain. They are containerised applications that provide some required functionality. Microservices can be composed together to create an Algorithm, which uses the functionality of potentially multiple Microservices to realise some goal.","title":"Introduction"},{"location":"microservice/#pre-requisites","text":"Microservices in DIGITbrain must be containerised in an OCI-compliant image format. The most common format for this is Docker but other formats are also suitable. Once built, your container must be pushed to a Container Registry. DockerHub offers free public and paid private repositories, or the DIGITbrain platform itself offers private repositories on a private registry. Contact an administrator for access to the DIGITbrain private registry.","title":"Pre-requisites"},{"location":"microservice/#metadata-describing-microservices","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired","title":"Metadata describing Microservices"},{"location":"microservice/#further-reading","text":"This space is for any other required documentation on this asset.","title":"Further reading..."},{"location":"model/","text":"Models in DIGITbrain Introduction Here is an introduction to Models in Db. Pre-requisites Information on any requirements imposed on this asset. Metadata describing Models For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired Further reading... This space is for any other required documentation on this asset.","title":"Model"},{"location":"model/#models-in-digitbrain","text":"","title":"Models in DIGITbrain"},{"location":"model/#introduction","text":"Here is an introduction to Models in Db.","title":"Introduction"},{"location":"model/#pre-requisites","text":"Information on any requirements imposed on this asset.","title":"Pre-requisites"},{"location":"model/#metadata-describing-models","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired","title":"Metadata describing Models"},{"location":"model/#further-reading","text":"This space is for any other required documentation on this asset.","title":"Further reading..."},{"location":"start/","text":"Getting Started With DIGITbrain Whether you want to publish a Microservice, create an Algorithm, or describe some Data, there are some simple steps to getting started with the DIGITbrain platform. The documentation for each asset describes necessary pre-requisities and more detail on required fields. See the list below: Microservice Algorithm Model Data MA Pair DMA Tuple Deployment","title":"Getting Started"},{"location":"start/#getting-started-with-digitbrain","text":"Whether you want to publish a Microservice, create an Algorithm, or describe some Data, there are some simple steps to getting started with the DIGITbrain platform. The documentation for each asset describes necessary pre-requisities and more detail on required fields. See the list below: Microservice Algorithm Model Data MA Pair DMA Tuple Deployment","title":"Getting Started With DIGITbrain"},{"location":"supporting_metadata/","text":"Supporting Metadata in DIGITbrain Introduction Here is an introduction to Supporting Metadata. Pre-requisites Information on any requirements imposed on this asset. Metadata describing Supporting Metadata For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired Further reading... This space is for any other required documentation on this asset.","title":"Supporting Metadata"},{"location":"supporting_metadata/#supporting-metadata-in-digitbrain","text":"","title":"Supporting Metadata in DIGITbrain"},{"location":"supporting_metadata/#introduction","text":"Here is an introduction to Supporting Metadata.","title":"Introduction"},{"location":"supporting_metadata/#pre-requisites","text":"Information on any requirements imposed on this asset.","title":"Pre-requisites"},{"location":"supporting_metadata/#metadata-describing-supporting-metadata","text":"For a closer look at this metadata, use the following resources: Attribute Listing for an itemised listing of fields Metadata Table for a table-formatted overview Feel free to extend this list as desired","title":"Metadata describing Supporting Metadata"},{"location":"supporting_metadata/#further-reading","text":"This space is for any other required documentation on this asset.","title":"Further reading..."},{"location":"attributes/algorithm/","text":".md-content__button { display: none; } Algorithm Metadata Fields Available Fields The metadata specification for a DIGITbrain Algorithm has these sections: Description Algorithm Description id Auto-generated - String - a unique id to identify this asset Example id : algorithm_10824912410291 name Required - String - a human-readable name to ease identification and discoverability for human users Example name : Object Detection Algorithm for detection of faulty weld seams description Required - String - a short, human-readable description of the Algorithm to aid a human user in analysing the Algorithm\u2019s capabilities and its applicability to a certain problem Example description : This algorithm can be used to solve a specifc problem, and applies some fancy technologies. classificationSchema Required - Enumeration { Simulation, ML, others } - the classification of the Algorithm, to describe the specialization area Example classificationSchema : ML type Required - List( String) - a detailed list of attributes to describe the Algorithm\u2019s field of application Example type : { neural network , deep learning , convolutional neural network , CNN } author Required - String - the authoring entity Example author : DFKI date Auto-generated - Date - the creation data Example date : 06.04.2021 version Required - String - the version Example version : 1.0 Algorithm listOfMicroservices Required - List( String) - a list of Microservice Asset IDs, which are contained in the algorithm Example listOfMicroservices : { microserviceAsset_id_121241241 } deploymentMapping Required - Map( String: String) - a mapping specifying which microservice should run on which host. By default each microservice is assigned a respective host, but this behaviour is not always ideal (eg. when two or more Microservices may need to run on the same host) Example deploymentMapping : { microserviceA : hostB , microserviceB : hostB , microserviceC : hostC }","title":"Algorithm"},{"location":"attributes/algorithm/#algorithm-metadata-fields","text":"","title":"Algorithm Metadata Fields"},{"location":"attributes/algorithm/#available-fields","text":"The metadata specification for a DIGITbrain Algorithm has these sections: Description Algorithm","title":"Available Fields"},{"location":"attributes/algorithm/#description","text":"id Auto-generated - String - a unique id to identify this asset Example id : algorithm_10824912410291 name Required - String - a human-readable name to ease identification and discoverability for human users Example name : Object Detection Algorithm for detection of faulty weld seams description Required - String - a short, human-readable description of the Algorithm to aid a human user in analysing the Algorithm\u2019s capabilities and its applicability to a certain problem Example description : This algorithm can be used to solve a specifc problem, and applies some fancy technologies. classificationSchema Required - Enumeration { Simulation, ML, others } - the classification of the Algorithm, to describe the specialization area Example classificationSchema : ML type Required - List( String) - a detailed list of attributes to describe the Algorithm\u2019s field of application Example type : { neural network , deep learning , convolutional neural network , CNN } author Required - String - the authoring entity Example author : DFKI date Auto-generated - Date - the creation data Example date : 06.04.2021 version Required - String - the version Example version : 1.0","title":"Description"},{"location":"attributes/algorithm/#algorithm","text":"listOfMicroservices Required - List( String) - a list of Microservice Asset IDs, which are contained in the algorithm Example listOfMicroservices : { microserviceAsset_id_121241241 } deploymentMapping Required - Map( String: String) - a mapping specifying which microservice should run on which host. By default each microservice is assigned a respective host, but this behaviour is not always ideal (eg. when two or more Microservices may need to run on the same host) Example deploymentMapping : { microserviceA : hostB , microserviceB : hostB , microserviceC : hostC }","title":"Algorithm"},{"location":"attributes/data/","text":".md-content__button { display: none; } Data Metadata Fields Available Fields The metadata specification for a DIGITbrain Data has these sections: Administrative data Description Search support Datakind specification Data access specification Open parameters Further access clauses (extensible) Data content semantics Administrative data ID Auto-generated - id - Unique identifier of the data resource. Example ID : UUID AUTHOR Auto-generated - id - Unique identifier of the user who created this record Example AUTHOR : UUID DATA_PROVIDER Auto-generated - id - Legal entity who provides the data resource (owner). It is the affiliation of the author by default. Example DATA_PROVIDER : UUID DATE Auto-generated - timestamp - Date of data resource registration. Example DATE : 10:45:13 CET 21/03/2021 PARENT Optional - id - Refercing a parent record. All fields of parent are inherited by this record, fields filled here will override parent field values (?). Example PARENT : inherit legal entity, contact details from a parent record. Description DATA_NAME Required - string - Name of the data resource. (The directory hierarchy in Nexus provides a fully qualified (FQ) name, which is unique.) Example DATA_NAME : CNSPiezoBolt#1 (in directory : factory 1 , machine1 , piezobolts) VERSION Optional - string - Version of this data resource entry (major.minor.patch). Defaults to 1.0.0 Example VERSION : 2.3.4 DATA_SIZE Optional - integer - Estimated/exact size of data (e.g. file size, volume size, or message size); might be used to assess HW requirements (RAM, CPU) . In bytes (k - kilo, m - mega, t - tera, p - peta) Example DATA_SIZE : 112m DATA_CONTACT Required - string - Data provider contact point, e.g. email address, to get access to these data (ask permissions/credentials to use these data). Optional if it corresponds to DATA_PROVIDER (email) details. Example DATA_CONTACT : info@company.com DATA_DESC Optional - string - Human readable description of the data resource. Example DATA_DESC : This sensor measures temperature in Celsius, sends data via ConSenses edge device via an MQTT broker DATA_SPECS_DOC Optional - URL - More detailed specification of data source characteristics (doc, pdf, \u2026) Example DATA_SPECS_DOC : data-source-specification-sheet.pdf Search support DATA_TAGS Optional - list of strings - A list of tags freely added to help in searching/indexing (not limited to a basic set of tags, keywords) Example DATA_TAGS : [ camera , rgb , w640 , h480 , jpg ] Datakind specification DATA_KIND Required - enum - Type of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. Example DATA_KIND : FILE , DIRECTORY , DATABASE , STREAM DATA_DIRECTION Required - enum - Direction of data flow (source: data provider, sink: data consumer/storage) Example DATA_DIRECTION : SOURCE , SINK , BIDIRECTIONAL DATA_FORMAT Optional - list of strings - Format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files). Example DATA_FORMAT : [ { application/json , text/plain , application/octet-stream , application/zip } ] Data access specification DATA_SOURCE_TYPE Optional - string - The exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI. Example DATA_SOURCE_TYPE : S3 , MYSQL , MQTT , ... (WP6 : DATA_SOURCE_TYPE=LOCAL, PATH=...\") DATA_URI (pseudo vars: DATA_PROTOCOL, DATA_HOST, DATA_PORT, DATA_PATH, DATA_QUERY, DATA_FRAGMENT) Optional - URI - Accessibility of the data resource, including host, port information, protocol, and other fields (path is protocol dependent, can be a topic name). GUI may show host, port, path separately. Hidden at search. Format: protocol://host:port/path Example DATA_URI (pseudo vars : DATA_PROTOCOL, DATA_HOST, DATA_PORT, DATA_PATH, DATA_QUERY, DATA_FRAGMENT) : s3://amazonaws/bucket/object , kafka://host/topic#1 , ... DATA_AUTH_TYPE Optional - list of enums - One or more authentication types that can be accepted by the storage resource. Example DATA_AUTH_TYPE : [ { none , userpass , accesskey_secretkey , ssl_certificate , tls_mutual , access_token , rclone_config } + ] Open parameters DATA_CREDENTIALS Optional - OPEN - Credentials (e.g. string/json, zip, config file) Further access clauses (extensible) DATA_PROTOCOL Optional - string - Protocol to use in communication with the data source, only if DATA_TYPE does not imply it (e.g. S3 over HTTP). Moved from to Data access specification. Example DATA_PROTOCOL : HTTP, HTTPS, TCP, UDP DATA_MYSQL_DIALECT Optional - string - Protocol dialect to be used in communication with the database Example DATA_MYSQL_DIALECT : mysqldialect , mariadbdialect DATA_MQTT_PROTOCOL_VERSION Optional - string - MQTT protocol version must be used Example DATA_MQTT_PROTOCOL_VERSION : 3.1.1, 5.0 DATA_KAFKA_BROKER_VERSION Optional - string - Kafka broker version Example DATA_KAFKA_BROKER_VERSION : 2.7.0 DATA_S3_REGION Optional - string - S3 region Example DATA_S3_REGION : eu-central-1 Data content semantics DATA_SCHEMA Optional - string - Describes message internal structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, ... Example DATA_SCHEMA : database schema file contents (or URL?) DATA_SCHEMA_ADDITIONAL_ATTRIBUTES Optional - string - Further restriction/specialization of DATA_SCHEMA, \u201cgeneral\u201d schema.","title":"Data"},{"location":"attributes/data/#data-metadata-fields","text":"","title":"Data Metadata Fields"},{"location":"attributes/data/#available-fields","text":"The metadata specification for a DIGITbrain Data has these sections: Administrative data Description Search support Datakind specification Data access specification Open parameters Further access clauses (extensible) Data content semantics","title":"Available Fields"},{"location":"attributes/data/#administrative-data","text":"ID Auto-generated - id - Unique identifier of the data resource. Example ID : UUID AUTHOR Auto-generated - id - Unique identifier of the user who created this record Example AUTHOR : UUID DATA_PROVIDER Auto-generated - id - Legal entity who provides the data resource (owner). It is the affiliation of the author by default. Example DATA_PROVIDER : UUID DATE Auto-generated - timestamp - Date of data resource registration. Example DATE : 10:45:13 CET 21/03/2021 PARENT Optional - id - Refercing a parent record. All fields of parent are inherited by this record, fields filled here will override parent field values (?). Example PARENT : inherit legal entity, contact details from a parent record.","title":"Administrative data"},{"location":"attributes/data/#description","text":"DATA_NAME Required - string - Name of the data resource. (The directory hierarchy in Nexus provides a fully qualified (FQ) name, which is unique.) Example DATA_NAME : CNSPiezoBolt#1 (in directory : factory 1 , machine1 , piezobolts) VERSION Optional - string - Version of this data resource entry (major.minor.patch). Defaults to 1.0.0 Example VERSION : 2.3.4 DATA_SIZE Optional - integer - Estimated/exact size of data (e.g. file size, volume size, or message size); might be used to assess HW requirements (RAM, CPU) . In bytes (k - kilo, m - mega, t - tera, p - peta) Example DATA_SIZE : 112m DATA_CONTACT Required - string - Data provider contact point, e.g. email address, to get access to these data (ask permissions/credentials to use these data). Optional if it corresponds to DATA_PROVIDER (email) details. Example DATA_CONTACT : info@company.com DATA_DESC Optional - string - Human readable description of the data resource. Example DATA_DESC : This sensor measures temperature in Celsius, sends data via ConSenses edge device via an MQTT broker DATA_SPECS_DOC Optional - URL - More detailed specification of data source characteristics (doc, pdf, \u2026) Example DATA_SPECS_DOC : data-source-specification-sheet.pdf","title":"Description"},{"location":"attributes/data/#search-support","text":"DATA_TAGS Optional - list of strings - A list of tags freely added to help in searching/indexing (not limited to a basic set of tags, keywords) Example DATA_TAGS : [ camera , rgb , w640 , h480 , jpg ]","title":"Search support"},{"location":"attributes/data/#datakind-specification","text":"DATA_KIND Required - enum - Type of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. Example DATA_KIND : FILE , DIRECTORY , DATABASE , STREAM DATA_DIRECTION Required - enum - Direction of data flow (source: data provider, sink: data consumer/storage) Example DATA_DIRECTION : SOURCE , SINK , BIDIRECTIONAL DATA_FORMAT Optional - list of strings - Format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files). Example DATA_FORMAT : [ { application/json , text/plain , application/octet-stream , application/zip } ]","title":"Datakind specification"},{"location":"attributes/data/#data-access-specification","text":"DATA_SOURCE_TYPE Optional - string - The exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI. Example DATA_SOURCE_TYPE : S3 , MYSQL , MQTT , ... (WP6 : DATA_SOURCE_TYPE=LOCAL, PATH=...\") DATA_URI (pseudo vars: DATA_PROTOCOL, DATA_HOST, DATA_PORT, DATA_PATH, DATA_QUERY, DATA_FRAGMENT) Optional - URI - Accessibility of the data resource, including host, port information, protocol, and other fields (path is protocol dependent, can be a topic name). GUI may show host, port, path separately. Hidden at search. Format: protocol://host:port/path Example DATA_URI (pseudo vars : DATA_PROTOCOL, DATA_HOST, DATA_PORT, DATA_PATH, DATA_QUERY, DATA_FRAGMENT) : s3://amazonaws/bucket/object , kafka://host/topic#1 , ... DATA_AUTH_TYPE Optional - list of enums - One or more authentication types that can be accepted by the storage resource. Example DATA_AUTH_TYPE : [ { none , userpass , accesskey_secretkey , ssl_certificate , tls_mutual , access_token , rclone_config } + ]","title":"Data access specification"},{"location":"attributes/data/#open-parameters","text":"DATA_CREDENTIALS Optional - OPEN - Credentials (e.g. string/json, zip, config file)","title":"Open parameters"},{"location":"attributes/data/#further-access-clauses-extensible","text":"DATA_PROTOCOL Optional - string - Protocol to use in communication with the data source, only if DATA_TYPE does not imply it (e.g. S3 over HTTP). Moved from to Data access specification. Example DATA_PROTOCOL : HTTP, HTTPS, TCP, UDP DATA_MYSQL_DIALECT Optional - string - Protocol dialect to be used in communication with the database Example DATA_MYSQL_DIALECT : mysqldialect , mariadbdialect DATA_MQTT_PROTOCOL_VERSION Optional - string - MQTT protocol version must be used Example DATA_MQTT_PROTOCOL_VERSION : 3.1.1, 5.0 DATA_KAFKA_BROKER_VERSION Optional - string - Kafka broker version Example DATA_KAFKA_BROKER_VERSION : 2.7.0 DATA_S3_REGION Optional - string - S3 region Example DATA_S3_REGION : eu-central-1","title":"Further access clauses (extensible)"},{"location":"attributes/data/#data-content-semantics","text":"DATA_SCHEMA Optional - string - Describes message internal structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, ... Example DATA_SCHEMA : database schema file contents (or URL?) DATA_SCHEMA_ADDITIONAL_ATTRIBUTES Optional - string - Further restriction/specialization of DATA_SCHEMA, \u201cgeneral\u201d schema.","title":"Data content semantics"},{"location":"attributes/deployment/","text":".md-content__button { display: none; } Deployment Metadata Fields Available Fields The metadata specification for a DIGITbrain Deployment has these sections: Description Deployments Data Source Mapping Description id Auto-generated - UUID - DIGITbrain reference name Required - String - Short name for the node/device author Required - String - Created by date Auto-generated - Date - Created on Deployments type Required - Enumeration {cloudbroker, edge} - computing centre cloudbroker Optional - Map of\u2026 - Configuration data for a CloudBroker instance deployment_id Optional - UUID - ID of CloudBroker Deployment instance_type_id Optional - UUID - ID of CloudBroker InstanceType key_pair_id Optional - UUID - ID of CloudBroker Key Pair opened_port Optional - String (comma separated integers) - Ports to open at cloud side endpoint Optional - URL - accesible IP or FQDN of edge device edge Optional - Map of\u2026 - Connection data for a bring-your-own edge Data Source Mapping data_source_mapping Optional - Map of\u2026 - Mapping Microservices to Data assets, as available in the DMA Tuple microserviceA_data Optional - List of UUIDs - UUIDs of required data sources for MicroserviceA microserviceB_data Optional - List of UUIDs - UUIDs of required data sources for MicroserviceB microserviceC_data Optional - List of UUIDs - UUIDs of required data sources for MicroserviceC","title":"Deployment"},{"location":"attributes/deployment/#deployment-metadata-fields","text":"","title":"Deployment Metadata Fields"},{"location":"attributes/deployment/#available-fields","text":"The metadata specification for a DIGITbrain Deployment has these sections: Description Deployments Data Source Mapping","title":"Available Fields"},{"location":"attributes/deployment/#description","text":"id Auto-generated - UUID - DIGITbrain reference name Required - String - Short name for the node/device author Required - String - Created by date Auto-generated - Date - Created on","title":"Description"},{"location":"attributes/deployment/#deployments","text":"type Required - Enumeration {cloudbroker, edge} - computing centre cloudbroker Optional - Map of\u2026 - Configuration data for a CloudBroker instance deployment_id Optional - UUID - ID of CloudBroker Deployment instance_type_id Optional - UUID - ID of CloudBroker InstanceType key_pair_id Optional - UUID - ID of CloudBroker Key Pair opened_port Optional - String (comma separated integers) - Ports to open at cloud side endpoint Optional - URL - accesible IP or FQDN of edge device edge Optional - Map of\u2026 - Connection data for a bring-your-own edge","title":"Deployments"},{"location":"attributes/deployment/#data-source-mapping","text":"data_source_mapping Optional - Map of\u2026 - Mapping Microservices to Data assets, as available in the DMA Tuple microserviceA_data Optional - List of UUIDs - UUIDs of required data sources for MicroserviceA microserviceB_data Optional - List of UUIDs - UUIDs of required data sources for MicroserviceB microserviceC_data Optional - List of UUIDs - UUIDs of required data sources for MicroserviceC","title":"Data Source Mapping"},{"location":"attributes/dma_tuple/","text":".md-content__button { display: none; } DMA Tuple Metadata Fields Available Fields The metadata specification for a DIGITbrain DMA Tuple has these sections: Definition Definition ID Auto-generated - ID / URI - Unique identifier for the DMA Tuple Example ID : 123e4567-e89b-12d3-a456-426614174000 Created at Auto-generated - ISO 8601 - Date of creation Example Created at : 2021-05-01T00:00:00Z Version Optional - Integer - Version number of the DMA Tuple Example Version : 21 Author Auto-generated - ID / URI - Identifier of the Author of the MA Pair (NB: Entity for author is referenced) Example Author : person_123e4567-e89b-12d3 (auto) Licensor Auto-generated - ID / URI - Identifier of the Legal Entity licensing the the MA Pair (NB: Entity for Licensor is referenced) Example Licensor : legal_entity_123e4567-e89b-12d3 (auto) Derivation Auto-generated - IDs / URIs - In case of derivation, references to parent / child (optional) Example Derivation : dma_tuple_123e4567-e89b-12d3 (auto) Name Optional - Text - Short name to identify the DMA Tuple Example Name : Pressure drop for the injection in hall 3 Scope Optional - Text - Short description of the scope of the DMA Tuple (human readable) Example Scope : Effectiveness of the mold closing process IP Instance Optional - ID / URI - Identifier of the IP Instance the DMA Tuple is valid for (NB: Entity for IP Instance is referenced) Example IP Instance : ip_instance_123e4567-e89b-12d3 Namespace Optional - ID / URI? - Context to interpret the associated information (optional?) Example Namespace : namespace_123e4567-e89b-12d3 MA Pair Optional - ID / URI - Identifier of the MA Pair associated to the DMA Tuple Example MA Pair : ma_pair_123e4567-e89b-12d3 D Assets Optional - IDs / URIs - Identifiers of the Data Assets associated to the DMA Tuple Example D Assets : data_123e4567-e89b-12d3 Deployments Optional - See \"Deployments\" - Characteristics of the Deployment for every Microservice associated to the DMA Tuple (NB: Entities for the available deployment infrastructures to be provided by DB Solution and selected for DMA Tuple. No deployment entity metadata structure currently exists) Example Deployments : deployments_123e4567-e89b-12d3 Schedule Optional - Dates - Days and hours the DMA Tuple will be active (optional) Example Schedule : R90/2021-05-01T00:00:00Z/PT48H Payload Optional - String - User-defined key-value pairs: JSON string with additional information (optional) Example Payload : { \u2018injectionMold\u2019 : \u2018Circuit Case\u2019 }","title":"DMA Tuple"},{"location":"attributes/dma_tuple/#dma-tuple-metadata-fields","text":"","title":"DMA Tuple Metadata Fields"},{"location":"attributes/dma_tuple/#available-fields","text":"The metadata specification for a DIGITbrain DMA Tuple has these sections: Definition","title":"Available Fields"},{"location":"attributes/dma_tuple/#definition","text":"ID Auto-generated - ID / URI - Unique identifier for the DMA Tuple Example ID : 123e4567-e89b-12d3-a456-426614174000 Created at Auto-generated - ISO 8601 - Date of creation Example Created at : 2021-05-01T00:00:00Z Version Optional - Integer - Version number of the DMA Tuple Example Version : 21 Author Auto-generated - ID / URI - Identifier of the Author of the MA Pair (NB: Entity for author is referenced) Example Author : person_123e4567-e89b-12d3 (auto) Licensor Auto-generated - ID / URI - Identifier of the Legal Entity licensing the the MA Pair (NB: Entity for Licensor is referenced) Example Licensor : legal_entity_123e4567-e89b-12d3 (auto) Derivation Auto-generated - IDs / URIs - In case of derivation, references to parent / child (optional) Example Derivation : dma_tuple_123e4567-e89b-12d3 (auto) Name Optional - Text - Short name to identify the DMA Tuple Example Name : Pressure drop for the injection in hall 3 Scope Optional - Text - Short description of the scope of the DMA Tuple (human readable) Example Scope : Effectiveness of the mold closing process IP Instance Optional - ID / URI - Identifier of the IP Instance the DMA Tuple is valid for (NB: Entity for IP Instance is referenced) Example IP Instance : ip_instance_123e4567-e89b-12d3 Namespace Optional - ID / URI? - Context to interpret the associated information (optional?) Example Namespace : namespace_123e4567-e89b-12d3 MA Pair Optional - ID / URI - Identifier of the MA Pair associated to the DMA Tuple Example MA Pair : ma_pair_123e4567-e89b-12d3 D Assets Optional - IDs / URIs - Identifiers of the Data Assets associated to the DMA Tuple Example D Assets : data_123e4567-e89b-12d3 Deployments Optional - See \"Deployments\" - Characteristics of the Deployment for every Microservice associated to the DMA Tuple (NB: Entities for the available deployment infrastructures to be provided by DB Solution and selected for DMA Tuple. No deployment entity metadata structure currently exists) Example Deployments : deployments_123e4567-e89b-12d3 Schedule Optional - Dates - Days and hours the DMA Tuple will be active (optional) Example Schedule : R90/2021-05-01T00:00:00Z/PT48H Payload Optional - String - User-defined key-value pairs: JSON string with additional information (optional) Example Payload : { \u2018injectionMold\u2019 : \u2018Circuit Case\u2019 }","title":"Definition"},{"location":"attributes/ma_pair/","text":".md-content__button { display: none; } MA Pair Metadata Fields Available Fields The metadata specification for a DIGITbrain MA Pair has these sections: Definition Definition ID Auto-generated - UUID - Unique identifier for the MA Pair Example ID : 123e4567-e89b-12d3-a456-426614174000 Created at Auto-generated - ISO 8601 - Date of creation Example Created at : 2021-05-01T00:00:00Z Version Optional - Integer - Version number of the MA Pair Example Version : 21 Author Auto-generated - UUID - Identifier of the Author of the MA Pair (NB: Entity for author is referenced) Example Author : person_123e4567-e89b-12d3 (auto) Licensor Auto-generated - UUID - Identifier of the Legal Entity licensing the MA Pair (NB: Entity for Licensor is referenced) Example Licensor : legal_entity_123e4567-e89b-12d3 (auto) Derivation Auto-generated - UUID - In case of derivation, references to parent / child (optional) Example Derivation : ma_pair_123e4567-e89b-12d3 (auto) Name Optional - Text - Short name to identify the MA Pair Example Name : Pressure drop Scope Optional - Text - Short description of the scope of the MA Pair (human readable) Example Scope : Effectiveness of the mold closing process IP Family Optional - UUID - Identifier of the IP Family the MA Pair is valid for Example IP Family : ip_family_123e4567-e89b-12d3 Namespace Optional - UUID? - Context to interpret the associated information (optional?) Example Namespace : namespace_123e4567-e89b-12d3 M Asset Optional - UUID - Identifier of the Model Asset associated to the MA Pair (NB: The corresponding model file is indicated in Model metadata (first tab) as Model_URI and the corresponding zip file needs to be served to the Algorithm to evaluate the Model by the Microservice (MODEL_FILENAME)) Example M Asset : model_123e4567-e89b-12d3 A Asset Optional - UUID - Identifiers of the Algorithm Asset associated to the MA Pair Example A Asset : algorithm_123e4567-e89b-12d3 Rules Optional - UUIDs - References to recommended Rules to be verified per Evaluation of the MA Pair Example Rules : rules_123e4567-e89b-12d3 Frequency Optional - Integer - Recommended number of evaluations conducted per hour for the MA Pair (optional) Example Frequency : 12 Payload Optional - String - User-defined key-value pairs: JSON string with additional information (optional) Example Payload : { \u2018minPressure\u2019 : 90 , \u2018maxPressure\u2019 : 120 }","title":"MA Pair"},{"location":"attributes/ma_pair/#ma-pair-metadata-fields","text":"","title":"MA Pair Metadata Fields"},{"location":"attributes/ma_pair/#available-fields","text":"The metadata specification for a DIGITbrain MA Pair has these sections: Definition","title":"Available Fields"},{"location":"attributes/ma_pair/#definition","text":"ID Auto-generated - UUID - Unique identifier for the MA Pair Example ID : 123e4567-e89b-12d3-a456-426614174000 Created at Auto-generated - ISO 8601 - Date of creation Example Created at : 2021-05-01T00:00:00Z Version Optional - Integer - Version number of the MA Pair Example Version : 21 Author Auto-generated - UUID - Identifier of the Author of the MA Pair (NB: Entity for author is referenced) Example Author : person_123e4567-e89b-12d3 (auto) Licensor Auto-generated - UUID - Identifier of the Legal Entity licensing the MA Pair (NB: Entity for Licensor is referenced) Example Licensor : legal_entity_123e4567-e89b-12d3 (auto) Derivation Auto-generated - UUID - In case of derivation, references to parent / child (optional) Example Derivation : ma_pair_123e4567-e89b-12d3 (auto) Name Optional - Text - Short name to identify the MA Pair Example Name : Pressure drop Scope Optional - Text - Short description of the scope of the MA Pair (human readable) Example Scope : Effectiveness of the mold closing process IP Family Optional - UUID - Identifier of the IP Family the MA Pair is valid for Example IP Family : ip_family_123e4567-e89b-12d3 Namespace Optional - UUID? - Context to interpret the associated information (optional?) Example Namespace : namespace_123e4567-e89b-12d3 M Asset Optional - UUID - Identifier of the Model Asset associated to the MA Pair (NB: The corresponding model file is indicated in Model metadata (first tab) as Model_URI and the corresponding zip file needs to be served to the Algorithm to evaluate the Model by the Microservice (MODEL_FILENAME)) Example M Asset : model_123e4567-e89b-12d3 A Asset Optional - UUID - Identifiers of the Algorithm Asset associated to the MA Pair Example A Asset : algorithm_123e4567-e89b-12d3 Rules Optional - UUIDs - References to recommended Rules to be verified per Evaluation of the MA Pair Example Rules : rules_123e4567-e89b-12d3 Frequency Optional - Integer - Recommended number of evaluations conducted per hour for the MA Pair (optional) Example Frequency : 12 Payload Optional - String - User-defined key-value pairs: JSON string with additional information (optional) Example Payload : { \u2018minPressure\u2019 : 90 , \u2018maxPressure\u2019 : 120 }","title":"Definition"},{"location":"attributes/microservice/","text":".md-content__button { display: none; } Microservice Metadata Fields Available Fields The metadata specification for a DIGITbrain Microservice has these sections: Description Service Hardware Requirements OS Requirements Input Data(WP4) Output Data (WP4) Model(WP5) Parameters Metrics Description id Auto-generated - String - unique DIGITbrain reference Example id : microservice_12312124 name Required - String - human readable short, yet descriptive name of the Microservice Example name : Object Detection for faulty parts author Required - String - name of the authoring entity Example author : DFKI date Auto-generated - Date - creation date Example date : 06.04.2021 version Required - String - version Example version : 1.0 description Required - String - short description of the metric measurement Example description : This metric describes the arithmetic mean of the approximated temperatures of the fabricated part when it leaves station 4. classificationSchema Required - Enumeration { Simulation, ML, others } - fine-granular classification of the Microservice Example classificationSchema : other type Required - Enumeration (xsd datatypes) - expected input type (may be used to verify the input) Example type : Integer Service deploymentFormat Required - Enumeration {docker-compose, kubernetes-manifest} - identifier of the deployment environment required to deploy the Microservice's container Example deploymentFormat : docker-compose deploymentData Required - JSON - JSON of docker-compose or kubernetes manifest required to run the container Example deploymentData : See https://github.com/UoW-CPC/ADTGenerator/blob/main/examples/metadata_microservice.json#L30 configurationData Optional - Map(Files) - configuration file(s) required by the service Example configurationData : filename : <file.yml>, other_filename : <other_file.cfg> mountedInputDirectories Optional - List(String) - directories shared on the host where this microservice can find required inputs Example mountedInputDirectories : /data mountedOutputDirectories Optional - List(String) - directories shared on the host where this microservice can find required outputs Example mountedOutputDirectories : /data_out Hardware Requirements recommendedNumberOfGPUs Optional - Int - recommended number of GPUs Example recommendedNumberOfGPUs : 2 minimumNumberOfGPUs Optional - Int - minimum required number of GPUs Example minimumNumberOfGPUs : 1 recommendedGPURAM Optional - Int - recommended amount of GPU memory in GB Example recommendedGPURAM : 6 minimumGPURAM Optional - Int - minimum required amount of GPU memory in GB Example minimumGPURAM : 1 gpuType Optional - String - a description of the type of GPUs, and further specifications, to allow the execution of the Microservice Example gpuType : NVidia (compute capability >= 7.0) hpcRequired Optional - Bool - whether this Microservice requires an HPC environment to be executed efficiently Example hpcRequired : true edgeType Optional - Enumeration {TPU (Google), NPU (Qualcomm), FPGA, NVIDIA Jetson AGX} - required type of edge device to allow the execution of the Microservice Example edgeType : NVIDIA Jetson AGX recommendedRAM Optional - String - recommended amount of memory in GB Example recommendedRAM : 16 minimumRAM Optional - String - minimum required amount memory in GB Example minimumRAM : 2 recommendedCPUs Optional - Int - recommended number of CPU cores Example recommendedCPUs : 4 minimumCPUs Optional - Int - minimum required number of CPU cores Example minimumCPUs : 2 requiredDiskSpace Optional - Int - required amount of disk space in GB Example requiredDiskSpace : 42 OS Requirements osArch Required - String - supported os architecture Example osArch : x86_64 osType Optional - String - supported os type Example osType : linux osDistribution Optional - String - supported os distribution Example osDistribution : ubuntu osVersion Optional - String - description of supported os version Example osVersion : 20.04 Input Data(WP4) inputData Optional - List( Data Objects) - list of Data objects for each required input, specified using the \"DATA\" fields listed below Example inputData : {{ DATA_KIND = { FILE , STREAM }, DATA_DIRECTION = { SOURCE }} input_id Required - String - human-readable identifier, unique within a Microservice Example input_id : file1 DATA_KIND Required - List( DATA_KIND) - supported types of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. Example DATA_KIND : { FILE , STREAM } DATA_DIRECTION Required - List( DATA_DIRECTION) - supported direction of data flow (source: data provider, sink: data consumer/storage) Example DATA_DIRECTION : { SINK , BIDIRECTIONAL } DATA_FORMAT Optional - List( DATA_FORMAT) - supported format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files) Example DATA_FORMAT : { application/zip , image/jpg } DATA_SOURCE_TYPE Optional - List( DATA_SOURCE_TYPE) - supported exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI. Example DATA_SOURCE_TYPE : { MYSQL , KAFKA } DATA_PROTOCOL Optional - List( DATA_PROTOCOL) - supported protocols Example DATA_PROTOCOL : { HTTP } DATA_AUTH_TYPE Optional - List( DATA_AUTH_TYPE) - supported authentication type Example DATA_AUTH_TYPE : { tls_mutual , userpass } DATA_MYSQL_DIALECT Optional - List( DATA_MYSQL_DIALECT) - supported MYSQL dialect, for each generated output Example DATA_MYSQL_DIALECT : { mariadbdialect } DATA_MQTT_PROTOCOL_VERSION Optional - List( DATA_MQTT_PROTOCOL_VERSION) - supported MQTT protocol version Example DATA_MQTT_PROTOCOL_VERSION : { 2.3.1 } DATA_KAFKA_BROKER_VERSION Optional - List( DATA_KAFKA_BROKER_VERSION) - supported Kafka broker version Example DATA_KAFKA_BROKER_VERSION : { 2.7.1 , 2.5 } DATA_S3_REGION Optional - List( DATA_S3_REGION) - supported S3 region Example DATA_S3_REGION : { eu-central-1 } DATA_SCHEMA Optional - List( DATA_SCHEMA) - supported internal message structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, \u2026 Example DATA_SCHEMA : { jpg } Output Data (WP4) outputData Optional - List( Data Objects) - list of Data objects for each generated output, specified using the \"DATA\" fields listed below Example outputData : {{ DATA_KIND = { FILE , STREAM }, DATA_DIRECTION = { SINK }} output_id Required - String - human-readable identifier, unique within a Microservice Example output_id : file1 Model(WP5) model_types Optional - List( ModelTypes) - list of supported Model types Example model_types : { SavedModel (Tensorflow) } model_recommendedAuthTools Optional - List (AuthTools) - list of recommended AuthoringTools used to generate the Model Example model_recommendedAuthTools : { PreSTRA } Parameters parameters Optional - List( Parameter) - list of Parameter objects for each possible parameters, to be specified before deployment name Required - String - short name (should be unique across the Microservice's metrics) Example name : meanTemperature mandatory Optional - Boolean - whether this parameter is mandatory (default: false) Example mandatory : true defaultValue Optional - has to match \"type\" - a default value, if the parameter is required but not provided Example defaultValue : 42 Metrics metrics Optional - List( Metrics) - list of Metric objects for each metric collected by the Microservice correspondingMeasurement Required - String - identification of the corresponding measurement, i.e. output of the Model Example correspondingMeasurement : temperature1 function Required - String - short description of the mathematical approach used to derive this value Example function : arithmetic mean unit Required - String - the unit of the metric measurement Example unit : degree celsius","title":"Microservice"},{"location":"attributes/microservice/#microservice-metadata-fields","text":"","title":"Microservice Metadata Fields"},{"location":"attributes/microservice/#available-fields","text":"The metadata specification for a DIGITbrain Microservice has these sections: Description Service Hardware Requirements OS Requirements Input Data(WP4) Output Data (WP4) Model(WP5) Parameters Metrics","title":"Available Fields"},{"location":"attributes/microservice/#description","text":"id Auto-generated - String - unique DIGITbrain reference Example id : microservice_12312124 name Required - String - human readable short, yet descriptive name of the Microservice Example name : Object Detection for faulty parts author Required - String - name of the authoring entity Example author : DFKI date Auto-generated - Date - creation date Example date : 06.04.2021 version Required - String - version Example version : 1.0 description Required - String - short description of the metric measurement Example description : This metric describes the arithmetic mean of the approximated temperatures of the fabricated part when it leaves station 4. classificationSchema Required - Enumeration { Simulation, ML, others } - fine-granular classification of the Microservice Example classificationSchema : other type Required - Enumeration (xsd datatypes) - expected input type (may be used to verify the input) Example type : Integer","title":"Description"},{"location":"attributes/microservice/#service","text":"deploymentFormat Required - Enumeration {docker-compose, kubernetes-manifest} - identifier of the deployment environment required to deploy the Microservice's container Example deploymentFormat : docker-compose deploymentData Required - JSON - JSON of docker-compose or kubernetes manifest required to run the container Example deploymentData : See https://github.com/UoW-CPC/ADTGenerator/blob/main/examples/metadata_microservice.json#L30 configurationData Optional - Map(Files) - configuration file(s) required by the service Example configurationData : filename : <file.yml>, other_filename : <other_file.cfg> mountedInputDirectories Optional - List(String) - directories shared on the host where this microservice can find required inputs Example mountedInputDirectories : /data mountedOutputDirectories Optional - List(String) - directories shared on the host where this microservice can find required outputs Example mountedOutputDirectories : /data_out","title":"Service"},{"location":"attributes/microservice/#hardware-requirements","text":"recommendedNumberOfGPUs Optional - Int - recommended number of GPUs Example recommendedNumberOfGPUs : 2 minimumNumberOfGPUs Optional - Int - minimum required number of GPUs Example minimumNumberOfGPUs : 1 recommendedGPURAM Optional - Int - recommended amount of GPU memory in GB Example recommendedGPURAM : 6 minimumGPURAM Optional - Int - minimum required amount of GPU memory in GB Example minimumGPURAM : 1 gpuType Optional - String - a description of the type of GPUs, and further specifications, to allow the execution of the Microservice Example gpuType : NVidia (compute capability >= 7.0) hpcRequired Optional - Bool - whether this Microservice requires an HPC environment to be executed efficiently Example hpcRequired : true edgeType Optional - Enumeration {TPU (Google), NPU (Qualcomm), FPGA, NVIDIA Jetson AGX} - required type of edge device to allow the execution of the Microservice Example edgeType : NVIDIA Jetson AGX recommendedRAM Optional - String - recommended amount of memory in GB Example recommendedRAM : 16 minimumRAM Optional - String - minimum required amount memory in GB Example minimumRAM : 2 recommendedCPUs Optional - Int - recommended number of CPU cores Example recommendedCPUs : 4 minimumCPUs Optional - Int - minimum required number of CPU cores Example minimumCPUs : 2 requiredDiskSpace Optional - Int - required amount of disk space in GB Example requiredDiskSpace : 42","title":"Hardware Requirements"},{"location":"attributes/microservice/#os-requirements","text":"osArch Required - String - supported os architecture Example osArch : x86_64 osType Optional - String - supported os type Example osType : linux osDistribution Optional - String - supported os distribution Example osDistribution : ubuntu osVersion Optional - String - description of supported os version Example osVersion : 20.04","title":"OS Requirements"},{"location":"attributes/microservice/#input-datawp4","text":"inputData Optional - List( Data Objects) - list of Data objects for each required input, specified using the \"DATA\" fields listed below Example inputData : {{ DATA_KIND = { FILE , STREAM }, DATA_DIRECTION = { SOURCE }} input_id Required - String - human-readable identifier, unique within a Microservice Example input_id : file1 DATA_KIND Required - List( DATA_KIND) - supported types of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. Example DATA_KIND : { FILE , STREAM } DATA_DIRECTION Required - List( DATA_DIRECTION) - supported direction of data flow (source: data provider, sink: data consumer/storage) Example DATA_DIRECTION : { SINK , BIDIRECTIONAL } DATA_FORMAT Optional - List( DATA_FORMAT) - supported format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files) Example DATA_FORMAT : { application/zip , image/jpg } DATA_SOURCE_TYPE Optional - List( DATA_SOURCE_TYPE) - supported exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI. Example DATA_SOURCE_TYPE : { MYSQL , KAFKA } DATA_PROTOCOL Optional - List( DATA_PROTOCOL) - supported protocols Example DATA_PROTOCOL : { HTTP } DATA_AUTH_TYPE Optional - List( DATA_AUTH_TYPE) - supported authentication type Example DATA_AUTH_TYPE : { tls_mutual , userpass } DATA_MYSQL_DIALECT Optional - List( DATA_MYSQL_DIALECT) - supported MYSQL dialect, for each generated output Example DATA_MYSQL_DIALECT : { mariadbdialect } DATA_MQTT_PROTOCOL_VERSION Optional - List( DATA_MQTT_PROTOCOL_VERSION) - supported MQTT protocol version Example DATA_MQTT_PROTOCOL_VERSION : { 2.3.1 } DATA_KAFKA_BROKER_VERSION Optional - List( DATA_KAFKA_BROKER_VERSION) - supported Kafka broker version Example DATA_KAFKA_BROKER_VERSION : { 2.7.1 , 2.5 } DATA_S3_REGION Optional - List( DATA_S3_REGION) - supported S3 region Example DATA_S3_REGION : { eu-central-1 } DATA_SCHEMA Optional - List( DATA_SCHEMA) - supported internal message structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, \u2026 Example DATA_SCHEMA : { jpg }","title":"Input Data(WP4)"},{"location":"attributes/microservice/#output-data-wp4","text":"outputData Optional - List( Data Objects) - list of Data objects for each generated output, specified using the \"DATA\" fields listed below Example outputData : {{ DATA_KIND = { FILE , STREAM }, DATA_DIRECTION = { SINK }} output_id Required - String - human-readable identifier, unique within a Microservice Example output_id : file1","title":"Output Data (WP4)"},{"location":"attributes/microservice/#modelwp5","text":"model_types Optional - List( ModelTypes) - list of supported Model types Example model_types : { SavedModel (Tensorflow) } model_recommendedAuthTools Optional - List (AuthTools) - list of recommended AuthoringTools used to generate the Model Example model_recommendedAuthTools : { PreSTRA }","title":"Model(WP5)"},{"location":"attributes/microservice/#parameters","text":"parameters Optional - List( Parameter) - list of Parameter objects for each possible parameters, to be specified before deployment name Required - String - short name (should be unique across the Microservice's metrics) Example name : meanTemperature mandatory Optional - Boolean - whether this parameter is mandatory (default: false) Example mandatory : true defaultValue Optional - has to match \"type\" - a default value, if the parameter is required but not provided Example defaultValue : 42","title":"Parameters"},{"location":"attributes/microservice/#metrics","text":"metrics Optional - List( Metrics) - list of Metric objects for each metric collected by the Microservice correspondingMeasurement Required - String - identification of the corresponding measurement, i.e. output of the Model Example correspondingMeasurement : temperature1 function Required - String - short description of the mathematical approach used to derive this value Example function : arithmetic mean unit Required - String - the unit of the metric measurement Example unit : degree celsius","title":"Metrics"},{"location":"attributes/model/","text":".md-content__button { display: none; } Model Metadata Fields Available Fields The metadata specification for a DIGITbrain Model has these sections: Parameters Dependant FMUs OS Requirements Hardware Requirements Publishing Description Optional - string - Model tag description Additional info about model files (e.g. versioning, scope, i.e. what is the model used for, e.g. simulation, control, etc.) - Human readable marketplace description ID Auto-generated - UUID - Internal DigitBrain reference (automatically generated) Name Optional - string - Name of the model Version Optional - semver (if model only has revisions, use semver prerelease 0.1, 0.2, etc.) - Version of the model License Optional - enum tbd in SAD group - License of the model Provider Optional - string - Provider name: Institution or Person Provider_contacts Optional - obj - OPTIONAL: Dictionary with keys being phone, email, address - Type takes into account co-simulation models, for which solver info is mandatory (next slide) AuthTool Optional - enum - Authoring Tool used to create the model Type Optional - enum - ML, LCA, 3D FEM and CFD, System simulation, discrete event simulation, co-simulation (it couples a model with specific algorithms) - The original term Path was proposed to be changed (SAD) Fidelity Optional - number - OPTIONAL: Error of the model\u2019s prediction Model_URI Optional - URI - Where the model file is stored Where the model file is stored DigitBrain certified external model repository - We could keep these fields into minimum and add further enums if needed, e.g. Linear_equations Model_FILENAME Optional - string - Name of the model file (if necessary) for example when MODEL_URI points to a repository and not a single file State_depend Optional - bool - stateful -> 1, stateless -> 0 Parameters In-slots Optional - array of obj (key (group.key), name, dimensions (e.g. 2, 3, etc.), units (human-readable-name, exponents, offset, scale), default value, ranges, description) - Values on which the model is evaluated (or parameters that might set before or during the evaluation) - Inputs and parameters together, although if needed we can still differentiate them internally in key field for each specific model. Outputs Optional - nan - Values that the model approximates CosimSolverInfo Optional -****- OPTIONAL (for co-simulation Type only) Dependant FMUs Dependencies Optional - array of URI - Dependant FMUs for co-simulation OS Requirements osArch Optional - enum - OS architecture type (e.g. x86_64) osType Optional - enum - OS type (e.g. Windows, Linux) osDistribution Optional - enum - OS distributun (e.g. Ubuntu, Fedora) Hardware Requirements recommendedNumberOfGPUCores Optional - number - Recommended number of GPU cores minimumNumberOfGPUCores Optional - number - Minimum required number of GPU cores recommendedGPURAM Optional - number - Recommended GPU memory minimumGPURAM Optional - number - Minimum required GPU memory recommendedRAM Optional - number - Recommended Memory minimumRAM Optional - number - Minimum required memory recommendedCPUs Optional - number - Recommended number of CPU cores minimumCPUs Optional - number - Minimum required number of CPU cores requiredDiskSpace Optional - number - Required amount of disk space in GB Publishing","title":"Model"},{"location":"attributes/model/#model-metadata-fields","text":"","title":"Model Metadata Fields"},{"location":"attributes/model/#available-fields","text":"The metadata specification for a DIGITbrain Model has these sections: Parameters Dependant FMUs OS Requirements Hardware Requirements Publishing Description Optional - string - Model tag description Additional info about model files (e.g. versioning, scope, i.e. what is the model used for, e.g. simulation, control, etc.) - Human readable marketplace description ID Auto-generated - UUID - Internal DigitBrain reference (automatically generated) Name Optional - string - Name of the model Version Optional - semver (if model only has revisions, use semver prerelease 0.1, 0.2, etc.) - Version of the model License Optional - enum tbd in SAD group - License of the model Provider Optional - string - Provider name: Institution or Person Provider_contacts Optional - obj - OPTIONAL: Dictionary with keys being phone, email, address - Type takes into account co-simulation models, for which solver info is mandatory (next slide) AuthTool Optional - enum - Authoring Tool used to create the model Type Optional - enum - ML, LCA, 3D FEM and CFD, System simulation, discrete event simulation, co-simulation (it couples a model with specific algorithms) - The original term Path was proposed to be changed (SAD) Fidelity Optional - number - OPTIONAL: Error of the model\u2019s prediction Model_URI Optional - URI - Where the model file is stored Where the model file is stored DigitBrain certified external model repository - We could keep these fields into minimum and add further enums if needed, e.g. Linear_equations Model_FILENAME Optional - string - Name of the model file (if necessary) for example when MODEL_URI points to a repository and not a single file State_depend Optional - bool - stateful -> 1, stateless -> 0","title":"Available Fields"},{"location":"attributes/model/#parameters","text":"In-slots Optional - array of obj (key (group.key), name, dimensions (e.g. 2, 3, etc.), units (human-readable-name, exponents, offset, scale), default value, ranges, description) - Values on which the model is evaluated (or parameters that might set before or during the evaluation) - Inputs and parameters together, although if needed we can still differentiate them internally in key field for each specific model. Outputs Optional - nan - Values that the model approximates CosimSolverInfo Optional -****- OPTIONAL (for co-simulation Type only)","title":"Parameters"},{"location":"attributes/model/#dependant-fmus","text":"Dependencies Optional - array of URI - Dependant FMUs for co-simulation","title":"Dependant FMUs"},{"location":"attributes/model/#os-requirements","text":"osArch Optional - enum - OS architecture type (e.g. x86_64) osType Optional - enum - OS type (e.g. Windows, Linux) osDistribution Optional - enum - OS distributun (e.g. Ubuntu, Fedora)","title":"OS Requirements"},{"location":"attributes/model/#hardware-requirements","text":"recommendedNumberOfGPUCores Optional - number - Recommended number of GPU cores minimumNumberOfGPUCores Optional - number - Minimum required number of GPU cores recommendedGPURAM Optional - number - Recommended GPU memory minimumGPURAM Optional - number - Minimum required GPU memory recommendedRAM Optional - number - Recommended Memory minimumRAM Optional - number - Minimum required memory recommendedCPUs Optional - number - Recommended number of CPU cores minimumCPUs Optional - number - Minimum required number of CPU cores requiredDiskSpace Optional - number - Required amount of disk space in GB","title":"Hardware Requirements"},{"location":"attributes/model/#publishing","text":"","title":"Publishing"},{"location":"attributes/supporting_metadata/","text":".md-content__button { display: none; } Supporting Metadata Metadata Fields Available Fields The metadata specification for a DIGITbrain Supporting Metadata has these sections: Person Legal Entity (Organization) IP Instance Person ID Optional - ID / URI - Unique identifier for the IP Inst. Created at Optional - ISO 8601 - Date of creation Version Optional - Integer - Version number of the IP Instance First name Optional - Text - First name of the Person Last name Optional - Text - Last name of the Person Email Optional - Email - Email address of the Person CV Optional - Text - Short description of the Person Image Optional - Image - Picture of the IP Instance Affiliation Optional - ID / URI - Legal Entity the Person is affiliated with Legal Entity (Organization) Author Optional - ID / URI - Identifier of the Author of the IP Instance Name Optional - Text - Name of the IP Instance Description Optional - Text - Description of the IP Instance Logo Optional - Image - Logo of the Legal Entity URL Optional - URL - Website of the Legal Entity Location Optional - ID / URI? - Physical location of the IP Instance Phone Optional - String - Phone Number of the Legal Entity VAT ID No. Optional - String - VAT ID Number of the Legal Entity IP Family Optional - ID / URI - Reference to the IP Family Manager Optional - ID / URI - Identifier of the Legal Entity managing the IP Family Model No. Optional - Text - Number defined by the IP Man. Capacity Optional - Text - Capacity of the IP Family IP Man. Optional - ID / URI - Identifier of the IP Manufacturer (Legal Entity) IP Instance Operator Optional - ID / URI - Identifier of the Legal Entity operating the IP Instance Serial No. Optional - Text - Number defined by the IP Man.","title":"Supporting Metadata"},{"location":"attributes/supporting_metadata/#supporting-metadata-metadata-fields","text":"","title":"Supporting Metadata Metadata Fields"},{"location":"attributes/supporting_metadata/#available-fields","text":"The metadata specification for a DIGITbrain Supporting Metadata has these sections: Person Legal Entity (Organization) IP Instance","title":"Available Fields"},{"location":"attributes/supporting_metadata/#person","text":"ID Optional - ID / URI - Unique identifier for the IP Inst. Created at Optional - ISO 8601 - Date of creation Version Optional - Integer - Version number of the IP Instance First name Optional - Text - First name of the Person Last name Optional - Text - Last name of the Person Email Optional - Email - Email address of the Person CV Optional - Text - Short description of the Person Image Optional - Image - Picture of the IP Instance Affiliation Optional - ID / URI - Legal Entity the Person is affiliated with","title":"Person"},{"location":"attributes/supporting_metadata/#legal-entity-organization","text":"Author Optional - ID / URI - Identifier of the Author of the IP Instance Name Optional - Text - Name of the IP Instance Description Optional - Text - Description of the IP Instance Logo Optional - Image - Logo of the Legal Entity URL Optional - URL - Website of the Legal Entity Location Optional - ID / URI? - Physical location of the IP Instance Phone Optional - String - Phone Number of the Legal Entity VAT ID No. Optional - String - VAT ID Number of the Legal Entity IP Family Optional - ID / URI - Reference to the IP Family Manager Optional - ID / URI - Identifier of the Legal Entity managing the IP Family Model No. Optional - Text - Number defined by the IP Man. Capacity Optional - Text - Capacity of the IP Family IP Man. Optional - ID / URI - Identifier of the IP Manufacturer (Legal Entity)","title":"Legal Entity (Organization)"},{"location":"attributes/supporting_metadata/#ip-instance","text":"Operator Optional - ID / URI - Identifier of the Legal Entity operating the IP Instance Serial No. Optional - Text - Number defined by the IP Man.","title":"IP Instance"},{"location":"tables/algorithm/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Description id String algorithm_10824912410291 a unique id to identify this asset auto name String Object Detection Algorithm for detection of faulty weld seams a human-readable name to ease identification and discoverability for human users mandatory description String This algorithm can be used to solve a specifc problem, and applies some fancy technologies. a short, human-readable description of the Algorithm to aid a human user in analysing the Algorithm\u2019s capabilities and its applicability to a certain problem mandatory classificationSchema Enumeration { Simulation, ML, others } ML the classification of the Algorithm, to describe the specialization area mandatory type List( String) {neural network, deep learning, convolutional neural network, CNN} a detailed list of attributes to describe the Algorithm\u2019s field of application mandatory author String DFKI the authoring entity mandatory date Date 06.04.2021 the creation data auto version String 1.0 the version mandatory Algorithm listOfMicroservices List( String) {microserviceAsset_id_121241241} a list of Microservice Asset IDs, which are contained in the algorithm mandatory deploymentMapping Map( String: String) {microserviceA:hostB, microserviceB:hostB, microserviceC:hostC} a mapping specifying which microservice should run on which host. By default each microservice is assigned a respective host, but this behaviour is not always ideal (eg. when two or more Microservices may need to run on the same host) mandatory","title":"Algorithm"},{"location":"tables/data/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Administrative data ID id UUID Unique identifier of the data resource. auto AUTHOR id UUID Unique identifier of the user who created this record auto DATA_PROVIDER id UUID Legal entity who provides the data resource (owner). It is the affiliation of the author by default. auto DATE timestamp 10:45:13 CET 21/03/2021 Date of data resource registration. auto PARENT id inherit legal entity, contact details from a parent record. Refercing a parent record. All fields of parent are inherited by this record, fields filled here will override parent field values (?). optional Description DATA_NAME string CNSPiezoBolt#1 (in directory: factory 1 , machine1 , piezobolts) Name of the data resource. (The directory hierarchy in Nexus provides a fully qualified (FQ) name, which is unique.) mandatory VERSION string 2.3.4 Version of this data resource entry (major.minor.patch). Defaults to 1.0.0 optional DATA_SIZE integer 112m Estimated/exact size of data (e.g. file size, volume size, or message size); might be used to assess HW requirements (RAM, CPU) . In bytes (k - kilo, m - mega, t - tera, p - peta) optional DATA_CONTACT string info@company.com Data provider contact point, e.g. email address, to get access to these data (ask permissions/credentials to use these data). Optional if it corresponds to DATA_PROVIDER (email) details. mandatory DATA_DESC string This sensor measures temperature in Celsius, sends data via ConSenses edge device via an MQTT broker Human readable description of the data resource. optional DATA_SPECS_DOC URL data-source-specification-sheet.pdf More detailed specification of data source characteristics (doc, pdf, \u2026) Search support DATA_TAGS list of strings [camera, rgb, w640, h480, jpg] A list of tags freely added to help in searching/indexing (not limited to a basic set of tags, keywords) optional Datakind specification DATA_KIND enum FILE , DIRECTORY , DATABASE , STREAM Type of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. mandatory DATA_DIRECTION enum SOURCE , SINK , BIDIRECTIONAL Direction of data flow (source: data provider, sink: data consumer/storage) mandatory DATA_FORMAT list of strings [ { application/json , text/plain , application/octet-stream , application/zip } ] Format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files). mandatory (xWP relation is optional) Data access specification DATA_SOURCE_TYPE string S3 , MYSQL , MQTT , ... (WP6: DATA_SOURCE_TYPE=LOCAL, PATH=...\") The exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI. mandatory (WP6) DATA_URI (pseudo vars: DATA_PROTOCOL, DATA_HOST, DATA_PORT, DATA_PATH, DATA_QUERY, DATA_FRAGMENT) URI s3://amazonaws/bucket/object , kafka://host/topic#1 , ... Accessibility of the data resource, including host, port information, protocol, and other fields (path is protocol dependent, can be a topic name). GUI may show host, port, path separately. Hidden at search. Format: protocol://host:port/path mandatory (WP6 open) DATA_AUTH_TYPE list of enums [ { none , userpass , accesskey_secretkey , ssl_certificate , tls_mutual, access_token , rclone_config }+ ] One or more authentication types that can be accepted by the storage resource. mandatory (xWP relation is optional) Open parameters DATA_CREDENTIALS OPEN Credentials (e.g. string/json, zip, config file) open Further access clauses (extensible) DATA_PROTOCOL string HTTP, HTTPS, TCP, UDP Protocol to use in communication with the data source, only if DATA_TYPE does not imply it (e.g. S3 over HTTP). Moved from to Data access specification. optional DATA_MYSQL_DIALECT string mysqldialect , mariadbdialect Protocol dialect to be used in communication with the database optional DATA_MQTT_PROTOCOL_VERSION string 3.1.1, 5.0 MQTT protocol version must be used optional DATA_KAFKA_BROKER_VERSION string 2.7.0 Kafka broker version optional DATA_S3_REGION string eu-central-1 S3 region optional Data content semantics DATA_SCHEMA string database schema file contents (or URL?) Describes message internal structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, ... optional DATA_SCHEMA_ADDITIONAL_ATTRIBUTES string Further restriction/specialization of DATA_SCHEMA, \u201cgeneral\u201d schema. optional","title":"Data"},{"location":"tables/deployment/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Description id UUID DIGITbrain reference auto name String Short name for the node/device mandatory author String Created by mandatory date Date Created on auto Deployments type Enumeration {cloudbroker, edge} computing centre mandatory cloudbroker Map of\u2026 Configuration data for a CloudBroker instance deployment_id UUID ID of CloudBroker Deployment instance_type_id UUID ID of CloudBroker InstanceType key_pair_id UUID ID of CloudBroker Key Pair opened_port String (comma separated integers) Ports to open at cloud side endpoint URL Endpoint of the CB Platform edge Map of\u2026 Connection data for a bring-your-own edge endpoint URL accesible IP or FQDN of edge device Data Source Mapping data_source_mapping Map of\u2026 Mapping Microservices to Data assets, as available in the DMA Tuple optional microserviceA_data List of UUIDs UUIDs of required data sources for MicroserviceA microserviceB_data List of UUIDs UUIDs of required data sources for MicroserviceB microserviceC_data List of UUIDs UUIDs of required data sources for MicroserviceC","title":"Deployment"},{"location":"tables/dma_tuple/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Definition ID ID / URI 123e4567-e89b-12d3-a456-426614174000 Unique identifier for the DMA Tuple auto Created at ISO 8601 2021-05-01T00:00:00Z Date of creation auto Version Integer 21 Version number of the DMA Tuple Author ID / URI person_123e4567-e89b-12d3 (auto) Identifier of the Author of the MA Pair (NB: Entity for author is referenced) auto Licensor ID / URI legal_entity_123e4567-e89b-12d3 (auto) Identifier of the Legal Entity licensing the the MA Pair (NB: Entity for Licensor is referenced) auto Derivation IDs / URIs dma_tuple_123e4567-e89b-12d3 (auto) In case of derivation, references to parent / child (optional) auto Name Text Pressure drop for the injection in hall 3 Short name to identify the DMA Tuple Scope Text Effectiveness of the mold closing process Short description of the scope of the DMA Tuple (human readable) IP Instance ID / URI ip_instance_123e4567-e89b-12d3 Identifier of the IP Instance the DMA Tuple is valid for (NB: Entity for IP Instance is referenced) Namespace ID / URI? namespace_123e4567-e89b-12d3 Context to interpret the associated information (optional?) MA Pair ID / URI ma_pair_123e4567-e89b-12d3 Identifier of the MA Pair associated to the DMA Tuple D Assets IDs / URIs data_123e4567-e89b-12d3 Identifiers of the Data Assets associated to the DMA Tuple Deployments See \"Deployments\" deployments_123e4567-e89b-12d3 Characteristics of the Deployment for every Microservice associated to the DMA Tuple (NB: Entities for the available deployment infrastructures to be provided by DB Solution and selected for DMA Tuple. No deployment entity metadata structure currently exists) Schedule Dates R90/2021-05-01T00:00:00Z/PT48H Days and hours the DMA Tuple will be active (optional) Payload String {\u2018injectionMold\u2019: \u2018Circuit Case\u2019} User-defined key-value pairs: JSON string with additional information (optional)","title":"DMA Tuple"},{"location":"tables/ma_pair/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Definition ID UUID 123e4567-e89b-12d3-a456-426614174000 Unique identifier for the MA Pair auto Created at ISO 8601 2021-05-01T00:00:00Z Date of creation auto Version Integer 21 Version number of the MA Pair Author UUID person_123e4567-e89b-12d3 (auto) Identifier of the Author of the MA Pair (NB: Entity for author is referenced) auto Licensor UUID legal_entity_123e4567-e89b-12d3 (auto) Identifier of the Legal Entity licensing the MA Pair (NB: Entity for Licensor is referenced) auto Derivation UUID ma_pair_123e4567-e89b-12d3 (auto) In case of derivation, references to parent / child (optional) auto Name Text Pressure drop Short name to identify the MA Pair Scope Text Effectiveness of the mold closing process Short description of the scope of the MA Pair (human readable) IP Family UUID ip_family_123e4567-e89b-12d3 Identifier of the IP Family the MA Pair is valid for Namespace UUID? namespace_123e4567-e89b-12d3 Context to interpret the associated information (optional?) M Asset UUID model_123e4567-e89b-12d3 Identifier of the Model Asset associated to the MA Pair (NB: The corresponding model file is indicated in Model metadata (first tab) as Model_URI and the corresponding zip file needs to be served to the Algorithm to evaluate the Model by the Microservice (MODEL_FILENAME)) A Asset UUID algorithm_123e4567-e89b-12d3 Identifiers of the Algorithm Asset associated to the MA Pair Rules UUIDs rules_123e4567-e89b-12d3 References to recommended Rules to be verified per Evaluation of the MA Pair Frequency Integer 12 Recommended number of evaluations conducted per hour for the MA Pair (optional) Payload String {\u2018minPressure\u2019: 90, \u2018maxPressure\u2019: 120} User-defined key-value pairs: JSON string with additional information (optional)","title":"MA Pair"},{"location":"tables/microservice/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Description id String microservice_12312124 unique DIGITbrain reference auto name String Object Detection for faulty parts human readable short, yet descriptive name of the Microservice mandatory author String DFKI name of the authoring entity mandatory date Date 06.04.2021 creation date auto version String 1.0 version mandatory description String This microservices solves a certain problem using very specific methods... human readable short description of the Microservice's capabilities mandatory classificationSchema Enumeration { Simulation, ML, others } other fine-granular classification of the Microservice mandatory type List( String) {neural network, deep learning, convolutional neural network, CNN} detailed type of the microservice, list of keywords mandatory Service deploymentFormat Enumeration {docker-compose, kubernetes-manifest} docker-compose identifier of the deployment environment required to deploy the Microservice's container mandatory deploymentData JSON See https://github.com/UoW-CPC/ADTGenerator/blob/main/examples/metadata_microservice.json#L30 JSON of docker-compose or kubernetes manifest required to run the container mandatory configurationData Map(Files) filename: , other_filename: configuration file(s) required by the service optional mountedInputDirectories List(String) /data directories shared on the host where this microservice can find required inputs optional mountedOutputDirectories List(String) /data_out directories shared on the host where this microservice can find required outputs optional Hardware Requirements recommendedNumberOfGPUs Int 2 recommended number of GPUs optional minimumNumberOfGPUs Int 1 minimum required number of GPUs optional recommendedGPURAM Int 6 recommended amount of GPU memory in GB optional minimumGPURAM Int 1 minimum required amount of GPU memory in GB optional gpuType String NVidia (compute capability >= 7.0) a description of the type of GPUs, and further specifications, to allow the execution of the Microservice optional hpcRequired Bool true whether this Microservice requires an HPC environment to be executed efficiently optional edgeType Enumeration {TPU (Google), NPU (Qualcomm), FPGA, NVIDIA Jetson AGX} NVIDIA Jetson AGX required type of edge device to allow the execution of the Microservice optional recommendedRAM String 16 recommended amount of memory in GB optional minimumRAM String 2 minimum required amount memory in GB optional recommendedCPUs Int 4 recommended number of CPU cores optional minimumCPUs Int 2 minimum required number of CPU cores optional requiredDiskSpace Int 42 required amount of disk space in GB optional OS Requirements osArch String x86_64 supported os architecture mandatory osType String linux supported os type optional osDistribution String ubuntu supported os distribution optional osVersion String 20.04 description of supported os version optional Input Data(WP4) inputData List( Data Objects) {{DATA_KIND = {FILE, STREAM}, DATA_DIRECTION = {SOURCE}} list of Data objects for each required input, specified using the \"DATA\" fields listed below optional Data Object Fields input_id String file1 human-readable identifier, unique within a Microservice mandatory DATA_KIND List( DATA_KIND) {FILE, STREAM} supported types of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. mandatory DATA_DIRECTION List( DATA_DIRECTION) {SINK, BIDIRECTIONAL} supported direction of data flow (source: data provider, sink: data consumer/storage) mandatory DATA_FORMAT List( DATA_FORMAT) {application/zip, image/jpg} supported format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files). optional DATA_SOURCE_TYPE List( DATA_SOURCE_TYPE) {MYSQL, KAFKA} supported exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI optional DATA_PROTOCOL List( DATA_PROTOCOL) {HTTP} supported protocols optional DATA_AUTH_TYPE List( DATA_AUTH_TYPE) {tls_mutual, userpass} supported authentication type optional DATA_MYSQL_DIALECT List( DATA_MYSQL_DIALECT) {mariadbdialect} supported MYSQL dialect optional DATA_MQTT_PROTOCOL_VERSION List( DATA_MQTT_PROTOCOL_VERSION) {2.3.1} supported MQTT protocol version optional DATA_KAFKA_BROKER_VERSION List( DATA_KAFKA_BROKER_VERSION) {2.7.1, 2.5} supported Kafka broker version optional DATA_S3_REGION List( DATA_S3_REGION) {eu-central-1} supported S3 region optional DATA_SCHEMA List( DATA_SCHEMA) {jpg} supported internal message structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, \u2026 optional Output Data (WP4) outputData List( Data Objects) {{DATA_KIND = {FILE, STREAM}, DATA_DIRECTION = {SINK}} list of Data objects for each generated output, specified using the \"DATA\" fields listed below optional Data Object Fields output_id String file1 human-readable identifier, unique within a Microservice mandatory DATA_KIND List( DATA_KIND) {FILE, STREAM} supported types of the data resource (e.g. file/object storage, database management system, streaming broker). FILE can mean a single file or a folder. mandatory DATA_DIRECTION List( DATA_DIRECTION) {SINK, BIDIRECTIONAL} supported direction of data flow (source: data provider, sink: data consumer/storage) mandatory DATA_FORMAT List( DATA_FORMAT) {application/zip, image/jpg} supported format/encoding of the data produced or consumed by the data resource as a MIME type (IETF RFC 6838 https://www.sitepoint.com/mime-types-complete-list/). More than one can appear here (remote directory with several files) optional DATA_SOURCE_TYPE List( DATA_SOURCE_TYPE) {MYSQL, KAFKA} supported exact type of the data resource. Typically corresponds to the scheme part (protocol://) of DATA_URI. optional DATA_PROTOCOL List( DATA_PROTOCOL) {HTTP} supported protocols optional DATA_AUTH_TYPE List( DATA_AUTH_TYPE) {tls_mutual, userpass} supported authentication type optional DATA_MYSQL_DIALECT List( DATA_MYSQL_DIALECT) {mariadbdialect} supported MYSQL dialect, for each generated output optional DATA_MQTT_PROTOCOL_VERSION List( DATA_MQTT_PROTOCOL_VERSION) {2.3.1} supported MQTT protocol version optional DATA_KAFKA_BROKER_VERSION List( DATA_KAFKA_BROKER_VERSION) {2.7.1, 2.5} supported Kafka broker version optional DATA_S3_REGION List( DATA_S3_REGION) {eu-central-1} supported S3 region optional DATA_SCHEMA List( DATA_SCHEMA) {jpg} supported internal message structure, semantics, ontology. It can be any file (doc, rdf, owl, etc.). Asset Administration Shell, IEC 61360 - Common Data Dictionary, \u2026 optional Model(WP5) model_types List( ModelTypes) {SavedModel (Tensorflow)} list of supported Model types optional model_recommendedAuthTools List (AuthTools) {PreSTRA} list of recommended AuthoringTools used to generate the Model optional Parameters parameters List( Parameter) list of Parameter objects for each possible parameters, to be specified before deployment optional Parameter Fields name String detection_threshold short name for this parameter (should be unique across the Microservice\u2019s parameters) mandatory type Enumeration (xsd datatypes) Integer expected input type (may be used to verify the input) mandatory mandatory Boolean true whether this parameter is mandatory (default: false) optional defaultValue has to match \"type\" 42 a default value, if the parameter is required but not provided optional description String This parameter can be used to configure the included algorithm in a certain way, possible values: \"A\", \"B\", \"Z\" short description of the parameter and its possible values mandatory Metrics metrics List( Metrics) list of Metric objects for each metric collected by the Microservice optional Metric Fields name String meanTemperature short name (should be unique across the Microservice's metrics) mandatory correspondingMeasurement String temperature1 identification of the corresponding measurement, i.e. output of the Model mandatory function String arithmetic mean short description of the mathematical approach used to derive this value mandatory unit String degree celsius the unit of the metric measurement mandatory description String This metric describes the arithmetic mean of the approximated temperatures of the fabricated part when it leaves station 4. short description of the metric measurement mandatory","title":"Microservice"},{"location":"tables/model/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Description ID UUID Internal DigitBrain reference (automatically generated) auto Name string Name of the model Version semver (if model only has revisions, use semver prerelease 0.1, 0.2, etc.) Version of the model License enum tbd in SAD group License of the model Provider string Provider name: Institution or Person Provider_contacts obj OPTIONAL: Dictionary with keys being phone, email, address - Type takes into account co-simulation models, for which solver info is mandatory (next slide) AuthTool enum Authoring Tool used to create the model Type enum ML, LCA, 3D FEM and CFD, System simulation, discrete event simulation, co-simulation (it couples a model with specific algorithms) - The original term Path was proposed to be changed (SAD) Fidelity number OPTIONAL: Error of the model\u2019s prediction Model_URI URI Where the model file is stored Where the model file is stored DigitBrain certified external model repository - We could keep these fields into minimum and add further enums if needed, e.g. Linear_equations Model_FILENAME string Name of the model file (if necessary) for example when MODEL_URI points to a repository and not a single file optional State_depend bool stateful -> 1, stateless -> 0 Parameters In-slots array of obj (key (group.key), name, dimensions (e.g. 2, 3, etc.), units (human-readable-name, exponents, offset, scale), default value, ranges, description) Values on which the model is evaluated (or parameters that might set before or during the evaluation) - Inputs and parameters together, although if needed we can still differentiate them internally in key field for each specific model. Outputs Values that the model approximates CosimSolverInfo ** OPTIONAL (for co-simulation Type only) Dependant FMUs Dependencies array of URI Dependant FMUs for co-simulation OS Requirements osArch enum OS architecture type (e.g. x86_64) osType enum OS type (e.g. Windows, Linux) osDistribution enum OS distributun (e.g. Ubuntu, Fedora) Hardware Requirements recommendedNumberOfGPUCores number Recommended number of GPU cores optional minimumNumberOfGPUCores number Minimum required number of GPU cores optional recommendedGPURAM number Recommended GPU memory optional minimumGPURAM number Minimum required GPU memory optional recommendedRAM number Recommended Memory optional minimumRAM number Minimum required memory optional recommendedCPUs number Recommended number of CPU cores optional minimumCPUs number Minimum required number of CPU cores optional requiredDiskSpace number Required amount of disk space in GB optional Publishing Description string Model tag description Additional info about model files (e.g. versioning, scope, i.e. what is the model used for, e.g. simulation, control, etc.) - Human readable marketplace description","title":"Model"},{"location":"tables/supporting_metadata/","text":".md-typeset h1, .md-content__button { display: none; } Concept Key Subkey Type Example Value Comment Condition Person ID ID / URI Unique identifier for the Person Created at ISO 8601 Date of creation Version Integer Version number of the Person First name Text First name of the Person Last name Text Last name of the Person Email Email Email address of the Person CV Text Short description of the Person Image Image Profile picture of the Person Affiliation ID / URI Legal Entity the Person is affiliated with Legal Entity (Organization) ID ID / URI Unique identifier for the Legal Entity Created at ISO 8601 Date of creation Version Integer Version number of the Legal Entity Author ID / URI Identifier of the Author of the Legal Entity Name Text Name of the Legal Entity Description Text Description of the Legal Entity Logo Image Logo of the Legal Entity URL URL Website of the Legal Entity Location ID / URI? Physical address of the Legal Entity Phone String Phone Number of the Legal Entity VAT ID No. String VAT ID Number of the Legal Entity IP Family ID ID / URI Unique identifier for the IP Fam. Created at ISO 8601 Date of creation Version Integer Version number of the IP Family Author ID / URI Identifier of the Author of the IP Family Manager ID / URI Identifier of the Legal Entity managing the IP Family Name Text Technical Name of the IP Family Image Image Picture of the IP Family Model No. Text Number defined by the IP Man. Description Text Description of the IP Family Capacity Text Capacity of the IP Family IP Man. ID / URI Identifier of the IP Manufacturer (Legal Entity) IP Instance ID ID / URI Unique identifier for the IP Inst. Created at ISO 8601 Date of creation Version Integer Version number of the IP Instance Author ID / URI Identifier of the Author of the IP Instance Operator ID / URI Identifier of the Legal Entity operating the IP Instance IP Family ID / URI Reference to the IP Family Name Text Name of the IP Instance Image Image Picture of the IP Instance Serial No. Text Number defined by the IP Man. Description Text Description of the IP Instance Location ID / URI? Physical location of the IP Instance","title":"Supporting Metadata"}]}